{"version":3,"sources":["components/Navbar.js","hook/useFormInput.js","pages/Order.js","components/Home/BottomMenuItem.js","pages/Process.js","pages/Manage.js","utils/path.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["StyledWrapper","styled","div","PopoverContent","props","Item","Navbar","useState","setVisible","className","content","trigger","placement","arrowPointAtCenter","onVisibleChange","v","type","useFormInput","initialState","state","setState","value","onChange","e","target","availableMenus","name","price","OrderPage","customerName","_","range","length","map","orderCounts","setOrderCounts","modalVisible","setModalVisible","setOrderCount","index","placeholder","menu","key","onClick","size","visible","onCancel","onOk","toggle","reduce","prev","items","BottomMenuItem","onSelected","to","selected","icon","text","TabPane","Tabs","StyledWrapepr","initOrders","createdAt","Date","status","menus","amount","Order","order","ProcessPage","activatedKey","setActivatedKey","orders","pendingOrders","finishedOrders","filter","push","defaultActiveKey","activeKey","tab","initMenus","ManagePage","setMenus","pathWithBase","url","process","HomePage","location","useLocation","pathname","substr","setSelected","path","exact","Process","Manage","App","Home","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f2e49be.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Icon, Popover, Button, Menu } from 'antd';\n\nconst StyledWrapper = styled.div`\n    height: 30px;\n    display: flex;\n    padding: 10px;\n    justify-content: space-between;\n    align-items: center;\n    box-shadow: 1px 1px 5px 0px rgba(0,0,0,0.15);\n\n    h3 {\n        margin: 0;\n    }\n\n`;\n\nconst PopoverContent = props => {\n    return (\n        <Menu>\n            <Menu.Item>Home</Menu.Item>\n            <Menu.Item>Manage</Menu.Item>\n        </Menu>\n    )\n}\n\nconst Navbar = props => {\n\n    const [visible, setVisible] = useState(false);\n\n    return (\n        <StyledWrapper>\n            <h3 className='logo'>Take a Break</h3>\n            <div>\n                <Popover\n                    content={<PopoverContent />}\n                    trigger='click'\n                    placement='bottomRight'\n                    arrowPointAtCenter\n                    onVisibleChange={(v) => setVisible(v)}\n                >\n                    <Icon type='menu' />\n                </Popover>\n            </div>\n        </StyledWrapper>\n    )\n}\n\nexport default Navbar;","import { useState } from \"react\"\n\nconst useFormInput = (initialState) => {\n    const [state, setState] = useState(initialState);\n    return {\n        value: state,\n        onChange: (e) => setState(e.target.value)\n    }\n}\n\nexport default useFormInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Input, Button, Modal } from 'antd';\nimport useFormInput from '../hook/useFormInput';\nimport _ from 'lodash';\n\nconst StyledWrapper = styled.div`\n    padding: 0 10px;\n\n    .mb {\n        margin-bottom: 10px;\n    }\n\n    .item-input {\n        display: flex;\n        .qty, .btn-add {\n            margin-right: 5px;\n        }\n    }\n\n    .button {\n        width: 100%;\n    }\n`;\n\nconst availableMenus = [\n    {\n        name: 'Chicken Fried',\n        price: 29\n    },\n    {\n        name: 'Smoothy',\n        price: 30\n    }\n]\n\n\nconst OrderPage = () => {\n\n    const customerName = useFormInput('');\n    const [orderCounts, setOrderCounts] = useState(_.range(0, availableMenus.length).map(() => 0));\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const setOrderCount = (index, value) => {\n        orderCounts[index] = +value;\n        setOrderCounts([...orderCounts]);\n    }\n\n    return (\n        <StyledWrapper>\n            <label className='mb'>\n                <div>Name</div>\n                <Input type='text' placeholder='Customer name' {...customerName} />\n            </label>\n            {\n                availableMenus.map((menu, index) => (\n                    <div key={index} className='mb'>\n                        <div>{menu.name} ({menu.price} Baht / piece)</div>\n                        <div className='item-input'>\n                            <Input type='number' className='qty' value={orderCounts[index]} onChange={(e) => setOrderCount(index, e.target.value)} />\n                            <Button className='btn-add' type='primary' onClick={() => setOrderCount(index, orderCounts[index] + 1)}>+</Button>\n                            <Button className='btn-sub' type='danger' onClick={() => orderCounts[index] > 0 && setOrderCount(index, orderCounts[index] - 1)}>-</Button>\n                        </div>\n                    </div>\n                ))\n            }\n            <Button type='primary' size='large' className='button' onClick={() => setModalVisible(true)}>\n                Create Order\n            </Button>\n            <Modal\n                visible={modalVisible}\n                onCancel={() => setModalVisible(false)}\n                onOk={() => setModalVisible(false)}\n                toggle={() => setModalVisible(false)}\n            >\n                <h3>Order</h3>\n                <div>Name : {customerName.value}</div>\n                {\n                    availableMenus.map((menu, index) => (\n                        orderCounts[index] > 0 && (\n                            <div key={index}>{menu.name} {orderCounts[index]} {menu.price * orderCounts[index]} Baht</div>\n                        )\n                    ))\n                }\n                <div>Total {availableMenus.reduce((prev, items, index) => prev + (items.price * orderCounts[index]), 0)} Baht</div>\n            </Modal>\n        </StyledWrapper>\n    )\n}\n\nexport default OrderPage;","import React from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst StyledWrapper = styled.div`\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    \n    .link {\n        color: #000;\n    }\n\n    .link.selected {\n        color: var(--selected-color);\n    }\n    \n`\n\nconst BottomMenuItem = props => {\n    return (\n        <StyledWrapper  onClick={() => { props.onSelected() }}>\n            <Link to={'/' + props.name} className={`${props.selected && 'selected'} link`}>\n                <Icon type={props.icon} />\n                <div>{props.text}</div>\n            </Link>\n        </StyledWrapper>\n    )\n}\n\nexport default BottomMenuItem;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Tabs, Button } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst StyledWrapepr = styled.div`\n    padding: 10px;\n`;\n\nconst initOrders = [\n    {\n        customerName: 'Tanakorn Karode',\n        createdAt: new Date(),\n        status: 'pending',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 1\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    },\n    {\n        customerName: 'TK KR',\n        createdAt: new Date(),\n        status: 'finished',\n        menus: [\n            {\n                name: 'Chicken Fried',\n                amount: 2\n            },\n            {\n                name: 'Smoothy',\n                amount: 1\n            }\n        ]\n    }\n];\n\nconst Order = props => {\n    const { customerName, menus } = props.order;\n    return (\n        <div>\n            <div>{customerName}</div>\n            {\n                menus.map((menu, index) => (\n                    <ul key={index}>\n                        <li>{menu.name} {menu.amount}</li>\n                    </ul>\n                ))\n            }\n\n        </div>\n    )\n}\n\nconst ProcessPage = props => {\n\n    const [activatedKey, setActivatedKey] = useState('pending');\n    const [orders, setOrders] = useState(initOrders);\n\n    const pendingOrders = [];\n    const finishedOrders = [];\n    orders.filter((order) => {\n        if (order.status === 'pending') pendingOrders.push(order);\n        else finishedOrders.push(order);\n    });\n\n    return (\n        <StyledWrapepr>\n            <Tabs defaultActiveKey=\"pending\" activeKey={activatedKey} onChange={(activatedKey) => setActivatedKey(activatedKey)}>\n                <TabPane tab=\"Pending Order\" key=\"pending\">\n                    {\n                        pendingOrders.map((order, index) => (\n                            <div key={index}>\n                                <Order order={order} />\n                                <Button type='primary'>Finish</Button>\n                                <Button type='danger'>Cancel</Button>\n                            </div>\n                        ))\n                    }\n                </TabPane>\n                <TabPane tab=\"Finished Order\" key=\"finished\">\n                    {\n                        finishedOrders.map((order, index) => (\n                            <Order key={index} order={order} />\n                        ))\n                    }\n                </TabPane>\n            </Tabs>\n        </StyledWrapepr>\n    )\n}\n\nexport default ProcessPage;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Input, Button, Checkbox } from 'antd';\nimport useFormInput from '../hook/useFormInput';\n\nconst StyledWrapper = styled.div`\n    padding: 0 10px;\n    .mb {\n        margin-bottom: 10px;\n    }\n`;\n\nconst initMenus = [\n    {\n        name: 'Chicken Fried',\n        price: 29\n    },\n    {\n        name: 'Smoothy',\n        price: 30\n    }\n]\n\nconst ManagePage = props => {\n\n    const [menus, setMenus] = useState(initMenus);\n    const name = useFormInput('');\n    const price = useFormInput('0');\n\n    const addMenu = () => {\n        if (name.value.length > 0 && price.value.length > 0) {\n            setMenus([...menus, { name: name.value, price: +price.value }]);\n        }\n    }\n\n    return (\n        <StyledWrapper>\n            <h3>Add Menu</h3>\n            <label>\n                <div>Name</div>\n                <Input className='mb' type='text' placeholder='Menu Name' {...name} />\n            </label>\n            <label>\n                <div>Price</div>\n                <Input className='mb' type='number' placeholder='Menu Price' {...price} />\n            </label>\n            <Button className='mb' type='primary' onClick={addMenu}>Add</Button>\n            <h3>Menu List</h3>\n            <table>\n                <tbody>\n                    {\n                        menus.map((menu, index) => (\n                            <tr key={index}>\n                                <td><Checkbox /></td>\n                                <td>{menu.name}</td>\n                                <td>{menu.price} Baht</td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </StyledWrapper>\n    )\n}\n\nexport default ManagePage;","export const pathWithBase = (url) => process.env.PUBLIC_URL + url;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport OrderPage from './Order';\nimport BottomMenuItem from '../components/Home/BottomMenuItem';\nimport ProcessPage from './Process';\nimport ManagePage from './Manage';\nimport { pathWithBase } from '../utils/path';\n\nconst StyledWrapper = styled.div`\n    position: relative;\n    height: calc(100vh - 30px);\n    .content-container {\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 48px;\n        overflow-y: auto;\n    }\n    .bottom-bar {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 48px;\n\n        display: flex;\n        padding: 0 10px;\n        align-items: center;\n        justify-content: space-around;\n\n        box-shadow: 0px 0px 6px 0px rgba(0,0,0,0.15);\n    }\n`;\n\nconst HomePage = (props) => {\n\n    const location = useLocation();\n    let pathname = location.pathname == '/' ? '/order' : location.pathname;\n\n    const [selected, setSelected] = useState(pathname.substr(1, pathname.length));\n\n    return (\n        <StyledWrapper>\n            <div className='content-container'>\n                <Switch>\n                    <Route path={pathWithBase('/')} exact>\n                        <Redirect to={pathWithBase('/order')} />\n                    </Route>\n                    <Route path={pathWithBase('/order')}>\n                        <OrderPage />\n                    </Route>\n                    <Route path={pathWithBase('/process')}>\n                        <ProcessPage />\n                    </Route>\n                    <Route path={pathWithBase('/manage')}>\n                        <ManagePage />\n                    </Route>\n                </Switch>\n            </div>\n            <div className='bottom-bar'>\n                <BottomMenuItem\n                    name='order'\n                    icon='snippets'\n                    text='Order'\n                    selected={selected === 'order'}\n                    onSelected={() => setSelected('order')}\n                />\n                <BottomMenuItem\n                    name='process'\n                    icon='inbox'\n                    text='Process'\n                    selected={selected === 'process'}\n                    onSelected={() => setSelected('process')}\n                />\n                <BottomMenuItem\n                    name='manage'\n                    icon='setting'\n                    text='Manage'\n                    selected={selected === 'manage'}\n                    onSelected={() => setSelected('manage')}\n                />\n            </div>\n        </StyledWrapper>\n    )\n}\n\nexport default HomePage;","import React from 'react';\nimport './index.css';\nimport 'antd/dist/antd.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport HomePage from './pages/Home';\nimport { pathWithBase } from './utils/path';\n\nfunction App(props) {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path={pathWithBase('/')}>\n            <HomePage/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}